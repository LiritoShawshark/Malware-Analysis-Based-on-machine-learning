# 第一部分 从file_bag中提取File类的api中的路径词袋
file_bag_list = []
f = open('bag/file_bag1', mode='r', encoding='utf-8')
while True:
    line = f.readline()
    if not line:
        break
    line = line.strip('\n')
    file_bag_list.append(line)
f.close()

'''
# 第二部分 从reg_bag中提取Reg类的api中的路径词袋
reg_bag_list = []
f = open('bag/reg_bag1', mode='r', encoding='utf-8')
while True:
    line = f.readline()
    if not line:
        break
    line = line.strip('\n')
    reg_bag_list.append(line)
f.close()
'''

# 长度信息
file_len = len(file_bag_list)
# reg_len = len(reg_bag_list)
data_len = file_len

# 处理好数据
exe_names = []
exe_datas = []
f = open('csv/good.CSV', mode='r', encoding='utf-8')
f.readline()
while True:
    line = f.readline()
    if not line:
        break
    line = line.strip('\ufeff')
    line = line.strip('\n')
    line = line.replace('"', '')
    list = [i for i in line.split(',')]

    # list[1]为exe名，list[3]为函数名，list[4]为路径

    n = 0
    while True:
        if n == len(exe_datas):
            exe_names.append(list[1])
            exe_datas.append([0 for i in range(data_len)])
        if list[1] == exe_names[n]:
            break
        n += 1

    if 'CreateFile' in list[3]:
        path_name = list[4].split('\\')
        for p in path_name:
            for i in range(len(file_bag_list)):
                if p == file_bag_list[i]:
                    exe_datas[n][i] += 1
                    break
    '''
    elif 'RegOpenKey' in list[3]:
        path_name = list[4].split('\\')
        for p in path_name:
            for i in range(len(reg_bag_list)):
                if p == reg_bag_list[i]:
                    exe_datas[n][file_len+i] += 1
                    break
    '''

for i in range(len(exe_names)):
    file_sum = 0
    # reg_sum = 0
    for j in range(file_len):
        file_sum += exe_datas[i][j]
        '''
    for j in range(file_len + 1, data_len):
        reg_sum += exe_datas[i][j]
        '''
    for j in range(file_len):
        try:
            exe_datas[i][j] = round(exe_datas[i][j] / file_sum, 4)
        except ZeroDivisionError as e:
            pass
        '''
    for j in range(file_len + 1, data_len):
        try:
            exe_datas[i][j] = round(exe_datas[i][j] / reg_sum, 4)
        except ZeroDivisionError as e:
            pass
            '''

fn = open('data1', 'w')
for i in range(len(exe_datas)):
    for j in range(len(exe_datas[i])):
        fn.write(str(exe_datas[i][j]) + ',')
    fn.write('1\n')

# 处理坏数据
exe_names = []
exe_datas = []
f = open('csv/bad.CSV', mode='r', encoding='utf-8')
f.readline()
while True:
    line = f.readline()
    if not line:
        break
    line = line.strip('\ufeff')
    line = line.strip('\n')
    line = line.replace('"', '')
    list = [i for i in line.split(',')]

    # list[1]为exe名，list[3]为函数名，list[4]为路径

    n = 0
    while True:
        if n == len(exe_datas):
            exe_names.append(list[1])
            exe_datas.append([0 for i in range(data_len)])
        if list[1] == exe_names[n]:
            break
        n += 1

    if 'CreateFile' in list[3]:
        path_name = list[4].split('\\')
        for p in path_name:
            for i in range(len(file_bag_list)):
                if p == file_bag_list[i]:
                    exe_datas[n][i] += 1
                    break
        '''
    elif 'RegOpenKey' in list[3]:
        path_name = list[4].split('\\')
        for p in path_name:
            for i in range(len(reg_bag_list)):
                if p == reg_bag_list[i]:
                    exe_datas[n][file_len+i] += 1
                    break

    else:
        print('error:' + list[1] + ' ' + list[3])
        '''

# 转换为比例
for i in range(len(exe_names)):
    file_sum = 0
    # reg_sum = 0
    for j in range(file_len):
        file_sum += exe_datas[i][j]
        '''
    for j in range(file_len + 1, data_len):
        reg_sum += exe_datas[i][j]
        '''
    for j in range(file_len):
        try:
            exe_datas[i][j] = round(exe_datas[i][j] / file_sum, 4)
        except ZeroDivisionError as e:
            pass
        '''
    for j in range(file_len + 1, data_len):
        try:
            exe_datas[i][j] = round(exe_datas[i][j] / reg_sum, 4)
        except ZeroDivisionError as e:
            pass
            '''


for i in range(len(exe_datas)):
    for j in range(len(exe_datas[i])):
        fn.write(str(exe_datas[i][j]) + ',')
    fn.write('0\n')

fn.close()



from sklearn import svm
from sklearn import metrics
from sklearn.model_selection import train_test_split
import pickle
import pandas as pd
import numpy as np


def load_data():
    x, y = [], []
    with open('data1', 'r') as f:
        for line in f.readlines():
            line = line.strip('\n')
            data = [float(i) for i in line.split(',')]
            x.append(data[:-1])
            y.append(data[-1])
    return x, y


def Get_Accuracy(y_true, y_pred):  # Accuracy 准确率：分类器正确分类的样本数与总样本数之比
    accuracy = metrics.accuracy_score(y_true, y_pred)
    return accuracy


def Get_Precision_score(y_true, y_pred):  # Precision：精准率 正确被预测的正样本(TP)占所有被预测为正样本(TP+FP)的比例.
    precision = metrics.precision_score(y_true, y_pred)
    return precision


def Get_Recall(y_true, y_pred):  # Recall 召回率 正确被预测的正样本(TP)占所有真正 正样本(TP+FN)的比例.
    Recall = metrics.recall_score(y_true, y_pred)
    return Recall


def Get_f1_score(y_true, y_pred):  # F1-score: 精确率(precision)和召回率(Recall)的调和平均数
    f1_score = metrics.f1_score(y_true, y_pred)
    return f1_score


def Get_Auc_value(y_true, y_proba):
    # fpr, tpr, thresholds = metrics.roc_curve(samples_test_y, proba_pred_y, pos_label=2)
    auc = metrics.roc_auc_score(y_true, y_proba)
    return auc


if __name__ == '__main__':
    x_data, y_data = load_data()
    X = np.array(x_data)
    Y = np.array(y_data)

    # 以分类比3：1，即训练集0.75，测试集0.25随机分配，random_state为随机种子
    x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25, random_state=10)

    # 构造并训练SVM分类器模型，此处更改训练方法
    clf = svm.SVC(probability=True)
    clf.fit(x_train, y_train)

    # 保存模型
    f = open('svm.pickle', 'wb')
    pickle.dump(clf, f)
    f.close()

    # 预测分类结果
    y_predict = clf.predict(x_test)
    y_pred_probability = clf.predict_proba(x_test)

    df2 = pd.DataFrame(y_pred_probability)
    proba_pred_y = np.array(df2[1])     # 截取样本点预测为正样本的预测概率

    score = clf.score(x_test, y_test)
    print("SVM 模型打分: Score = %f" % score)
    accuracy = Get_Accuracy(y_test, y_predict)
    print("SVM Accuracy_Score = %f" % accuracy)
    precision = Get_Precision_score(y_test, y_predict)
    print("SVM Precision = %f" % precision)
    recall = Get_Recall(y_test, y_predict)
    print("SVM Recall = %f" % recall)
    f1_score = Get_f1_score(y_test, y_predict)
    print("SVM F1-Score  = %f" % f1_score)
    auc = Get_Auc_value(y_test, proba_pred_y)
    print("SVM AUC value: AUC = %f" % auc)